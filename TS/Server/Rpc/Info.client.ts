// @generated by protobuf-ts 2.7.0
// @generated from protobuf file "Server/Rpc/Info.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { InfoService } from "./Info";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetInfoResponse } from "./Info";
import type { Empty } from "../../google/protobuf/empty";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service InfoService
 */
export interface IInfoServiceClient {
    /**
     * @generated from protobuf rpc: GetInfo(google.protobuf.Empty) returns (GetInfoResponse);
     */
    getInfo(input: Empty, options?: RpcOptions): UnaryCall<Empty, GetInfoResponse>;
}
/**
 * @generated from protobuf service InfoService
 */
export class InfoServiceClient implements IInfoServiceClient, ServiceInfo {
    typeName = InfoService.typeName;
    methods = InfoService.methods;
    options = InfoService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetInfo(google.protobuf.Empty) returns (GetInfoResponse);
     */
    getInfo(input: Empty, options?: RpcOptions): UnaryCall<Empty, GetInfoResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, GetInfoResponse>("unary", this._transport, method, opt, input);
    }
}
